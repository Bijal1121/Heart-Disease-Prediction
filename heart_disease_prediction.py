# -*- coding: utf-8 -*-
"""Heart disease prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1p4botFI3o7VU4Tla6fEE4DYyneun9ts8

# Import the libraries
"""

import numpy as np
import pandas as pd

"""# Import the dataset"""

dataset = pd.read_csv('/content/heart.csv')

dataset.head()

dataset.tail()

dataset.shape

dataset.info()

dataset.isnull().sum()

dataset.describe()

"""# Checking the distribution of target variable.

---

1--> defective heart
0--> Healthy heart
"""

dataset['target'].value_counts()

X = dataset.drop(columns = 'target', axis=1)
Y = dataset['target']

X

Y

"""# Split dataset into training and test set"""

from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, stratify = Y, random_state = 2)
#here 'stratify = Y' is used to to ensure that both the train and test sets have the proportion of examples in each class that is 
#present in the provided “y” array.

print(X.shape, X_train.shape, X_test.shape)

"""# Model Training

Logistic Regression
"""

from sklearn.linear_model import LogisticRegression
model = LogisticRegression()
model.fit(X_train, Y_train)

"""# Model Evaluation

Accuracy Score
"""

from sklearn.metrics import accuracy_score

#accuracy of training data
X_train_prediction = model.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, Y_train)
print('Accuracy of training data: ', training_data_accuracy)

#accuracy of test data
X_test_prediction = model.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, Y_test)
print('Accuracy of test data: ', test_data_accuracy)

"""# Building a predictive system"""

input = (62,0,0,140,268,0,0,160,0,3.6,0,2,2)

#change the input data to numpy array
input_numpy_array = np.asarray(input)

# reshape the numpy array as we are predicting for only on instance
input_reshape = input_numpy_array.reshape(1,-1)

prediction = model.predict(input_reshape)
print(prediction)

if(prediction == 0):
  print('The person has a Heart Disease')
else:
  print('The person does not have a Heart Disease')